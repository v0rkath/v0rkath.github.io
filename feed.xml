<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://v0rkath.github.io/</id><title>v0rkath</title><subtitle>A hub of reverse engineering and malware analysis information and write-ups.</subtitle> <updated>2023-02-13T00:03:59+00:00</updated> <author> <name>v0rkath</name> <uri>https://v0rkath.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://v0rkath.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://v0rkath.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 v0rkath </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How IAT Hooking Works</title><link href="https://v0rkath.github.io/posts/How-IAT-Hooking-Works/" rel="alternate" type="text/html" title="How IAT Hooking Works" /><published>2022-12-20T14:15:00+00:00</published> <updated>2022-12-20T18:18:18+00:00</updated> <id>https://v0rkath.github.io/posts/How-IAT-Hooking-Works/</id> <content src="https://v0rkath.github.io/posts/How-IAT-Hooking-Works/" /> <author> <name>v0rkath</name> </author> <category term="Reverse Engineering" /> <category term="Hooking" /> <category term="Hacking" /> <summary> Overview This method of hooking is done by changing the address of the function you want to hook in the IAT so it jumps to your code rather than the function. What is IDT, IAT &amp;amp; ILT? The IDT is an acronym for ‘Import Directory Table’, this contains an array of IMAGE_IMPORT_DESCRIPTOR structs. This is usually found at the beginning of the .idata section of a binary (sometimes you may fi... </summary> </entry> <entry><title>Basics of Hooking Functions</title><link href="https://v0rkath.github.io/posts/How-Hooking-Works/" rel="alternate" type="text/html" title="Basics of Hooking Functions" /><published>2022-12-10T22:00:00+00:00</published> <updated>2022-12-11T11:03:21+00:00</updated> <id>https://v0rkath.github.io/posts/How-Hooking-Works/</id> <content src="https://v0rkath.github.io/posts/How-Hooking-Works/" /> <author> <name>v0rkath</name> </author> <category term="Reverse Engineering" /> <category term="Hooking" /> <category term="Hacking" /> <summary> Overview This blog post is to provide a very basic overview of what a hook is and the general process of how it works. Hooks are used to ensure your code is run when a certain function of a process is run. For this blog post we are going to be using the scenario of your player character being damaged in game. So, we want to run our own code every time the player’s health decreases, this allows... </summary> </entry> <entry><title>RC4 (Rivest Cipher 4) - How it operates &amp; how to recognise it</title><link href="https://v0rkath.github.io/posts/sdfsdf/" rel="alternate" type="text/html" title="RC4 (Rivest Cipher 4) - How it operates &amp; how to recognise it" /><published>2022-08-01T10:00:00+00:00</published> <updated>2022-08-02T12:26:18+00:00</updated> <id>https://v0rkath.github.io/posts/sdfsdf/</id> <content src="https://v0rkath.github.io/posts/sdfsdf/" /> <author> <name>v0rkath</name> </author> <category term="Reverse Engineering" /> <category term="Encryption/Decryption" /> <summary> RC4 (Rivest Cipher 4) This is a very commonly used Stream Cipher (this transforms a plaintext string byte-by-byte, they are linear meaning they are a symmetric type of encryption). Typically has 3 stages: Key Scheduling Algorithm (KSA) -&amp;gt; Creates a list of scrambled values Creates a list of values form 0 to 256 Each value is swapped with another based on a calcul... </summary> </entry> </feed>
